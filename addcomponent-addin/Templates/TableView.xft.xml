<?xml version="1.0" encoding="UTF-8"?>
<Template>
	<TemplateConfiguration>
		<_Name>Table View</_Name>
		<Icon>md-class-file</Icon>
		<_Category>Add Component iOS</_Category>
		<LanguageName>C#</LanguageName>
		<_Description>A custom class and an Interface Builder document for creating a Table View cell and corresponding Table View Source.</_Description>
	</TemplateConfiguration>
	<Conditions>
		<PartialTypeSupport Requirement="Enabled" />
	</Conditions>
	<TemplateFiles>
		<File name="${Name}TableViewCell.${LanguageExtension}"><![CDATA[
using System;
using Foundation;
using UIKit;

namespace ${Namespace}
{
    public partial class ${Name}TableViewCell : UITableViewCell
    {
        public static readonly UINib Nib = UINib.FromName ("${Name}TableViewCell", NSBundle.MainBundle);
        public static readonly NSString Key = new NSString ("${Name}TableViewCell");


			
		// ctor
			
        public ${Name}TableViewCell (IntPtr handle) : base (handle)
        {
        }

       

		// UITableViewCell

        public override void AwakeFromNib()
        {
            base.AwakeFromNib();
        }

        protected override void Dispose(bool disposing)
        {
            base.Dispose(disposing);

            if (disposing)
            {
                
            }
        }
    }
}
]]></File>
		<File name="${Name}TableViewCell.designer.cs" AddStandardHeader="False"
			SuppressAutoOpen="True" DependsOn="${Name}TableViewCell.cs"><![CDATA[// WARNING
//
// This file has been generated automatically by MonoDevelop to store outlets and
// actions made in the Xcode designer. If it is removed, they will be lost.
// Manual changes to this file may not be handled correctly.
//
using Foundation;

namespace ${Namespace}
{
    [Register ("${Name}TableViewCell")]
    partial class ${Name}TableViewCell
    {
        void ReleaseDesignerOutlets ()
        {
        }
    }
}]]></File>
		<File name="${Name}TableViewCell.xib" DefaultExtension=".xib"
			SuppressAutoOpen="True"><![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<document type="com.apple.InterfaceBuilder3.CocoaTouch.XIB" version="3.0" toolsVersion="4510" systemVersion="13B42" targetRuntime="iOS.CocoaTouch" propertyAccessControl="none" useAutolayout="YES">
    <dependencies>
        <plugIn identifier="com.apple.InterfaceBuilder.IBCocoaTouchPlugin" version="3742"/>
    </dependencies>
    <objects>
        <placeholder placeholderIdentifier="IBFilesOwner" id="-1" userLabel="File's Owner"/>
        <placeholder placeholderIdentifier="IBFirstResponder" id="-2" customClass="UIResponder"/>
        <tableViewCell contentMode="scaleToFill" selectionStyle="default" indentationWidth="10" customClass="${Name}" id="cxk-wN-pdQ">
            <rect key="frame" x="0.0" y="0.0" width="320" height="44"/>
            <autoresizingMask key="autoresizingMask" flexibleMaxX="YES" flexibleMaxY="YES"/>
            <tableViewCellContentView key="contentView" opaque="NO" clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="center" tableViewCell="cxk-wN-pdQ" id="YTl-1W-gDM">
                <rect key="frame" x="0.0" y="0.0" width="320" height="43"/>
                <autoresizingMask key="autoresizingMask"/>
            </tableViewCellContentView>
        </tableViewCell>
    </objects>
</document>
]]></File>
		<File name="${Name}TableViewSource.${LanguageExtension}"><![CDATA[
using System;
using Foundation;
using UIKit;

namespace ${Namespace}
{
    public partial class ${Name}TableViewSource : UITableViewSource
    {
        // ctor

		public ${Name}TableViewSource()
        {
			
        }
       


		// UITableViewSource

        public override UITableViewCell GetCell(UITableView tableView, NSIndexPath indexPath)
        {
            ${Name}TableViewCell cell = (${Name}TableViewCell)tableView.DequeueReusableCell(${Name}TableViewCell.Key, indexPath);

            return cell;
        }

        public override nint RowsInSection(UITableView tableview, nint section)
        {
            return 0;
        }

        public override void RowSelected(UITableView tableView, NSIndexPath indexPath)
        {
            
        }

		public override UITableViewRowAction[] EditActionsForRow(UITableView tableView, NSIndexPath indexPath)
        {
            return new UITableViewRowAction[0];
        }
    }
}
]]></File>
	</TemplateFiles>
</Template>